{"version":3,"sources":["mountain.jpg","BoundsDemo.tsx","CameraControlDemo.tsx","LargeAreaDemo.tsx","LongPageDemo.tsx","LowLevelEventsDemo.tsx","OverviewDemo.tsx","ZoomableImagesDemo.tsx","index.tsx"],"names":["module","exports","initViewPort","vp","setBounds","x","y","BoundsDemo","onCreate","style","boundaryDivStyle","width","height","left","top","display","justifyContent","position","border","boxSizing","color","backgroundColor","backgroundPosition","backgroundSize","backgroundImage","CameraControlDemo","r","React","ref","camera","recenter","bottom","flexDirection","alignItems","padding","borderRadius","marginBottom","buttonStyle","onClick","current","viewPort","moveBy","undefined","durationMilliseconds","fontSize","colorFor","i","LargeAreaDemo","innerDivStyle","lodash","map","key","c","margin","text","LongPageDemo","formatCoordsAsString","p","toFixed","clientX","clientY","LowLevelEventsDemo","lastPress","setLastPress","lastHover","setLastHover","pressContextMenu","setPressContextMenu","capturePress","setCapturePress","onDecideHowToHandlePress","element","coords","id","target","parentElement","ignorePressEntirely","capturePressThresholdMs","onCapturePressMove","onHover","e","onPressContextMenu","paddingBottom","SimpleTapCountingButton","tapCount","setTapCount","message","setMessage","potentialTapStyle","potentialLongTapStyle","hoverStyle","onTap","onLongTap","DragContainer","children","DraggableButton","props","setTranslation","panOffsetX","panOffsetY","setPanOffset","context","SpaceContext","baseStyle","background","capturePressOn","textAlign","Object","assign","transform","capturePressStyle","onCapturePressStart","pressableUnderlyingElement","pressableVirtualSpaceRect","translateClientRectToVirtualSpace","dragContainerBounds","childWidth","childHeight","logicalX","right","logicalY","finalX","finalY","interaction","OverviewDemo","centerFitHorizontalAreaIntoView","innerContainerStyle","rowStyle","columnStyle","src","mountain","alt","href","alert","type","noPanAreaStyle","marginTop","maxWidth","minWidth","minHeight","flex","ZoomableImagesDemo","renderImageArea","centerFitAreaIntoView","paddingTop","ReactDOM","render","useEffect","suppressBrowserZooming","to","activeClassName","flexGrow","path","className","document","getElementById"],"mappings":"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","file":"static/js/main.4d41ba35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mountain.5abca7a2.jpg\";","import * as React from 'react';\nimport { Space, ViewPort } from 'react-zoomable-ui';\n\n// This demonstrates constraining the ViewPort to a fixed size. The Space's\n// contents will be zoomed in automatically so that the boundary is honored.\n\nconst initViewPort = (vp: ViewPort) => {\n  vp.setBounds({ x: [0, 400], y: [0, 200] });\n};\n\nexport const BoundsDemo = () => {\n  return (\n    <Space onCreate={initViewPort}>\n      <div style={boundaryDivStyle}>\n        <span>\n          This box is 200px by 200px wide, but the view port bounds are x: 0 to 400, and y 0 to 200. That means the view\n          port has to zoom in to fix the box within the bounds, and you can pan a bit left to right but not up to down,\n          unless you zoom in some more.\n        </span>\n      </div>\n    </Space>\n  );\n};\n\nconst boundaryDivStyle: React.CSSProperties = {\n  width: 200,\n  height: 200,\n  left: 0,\n  top: 0,\n  display: 'flex',\n  justifyContent: 'center',\n  position: 'relative',\n  border: 'solid 2px red',\n  boxSizing: 'border-box',\n  color: 'red',\n  backgroundColor: '#cef',\n  backgroundPosition: '0 0, 15px 15px',\n  backgroundSize: '30px 30px',\n  backgroundImage:\n    'linear-gradient( 45deg, #CCC 25%, transparent 25%, transparent 75%, #CCC 75%, #CCC), linear-gradient( 45deg, #CCC 25%, transparent 25%, transparent 75%, #CCC 75%, #CCC)',\n};\n","import * as React from 'react';\nimport { Space } from 'react-zoomable-ui';\n\n// This demonstrates pragmatically manipulating the ViewPortCamera.\n\nexport const CameraControlDemo = () => {\n  const r = React.useRef<Space | null>(null);\n  return (\n    <React.Fragment>\n      <Space ref={r} style={{ backgroundColor: 'black' }} onCreate={vp => vp.camera.recenter(100, 100, 2)}>\n        <div\n          style={{\n            width: 200,\n            height: 200,\n            left: 0,\n            top: 0,\n            backgroundColor: 'blue',\n          }}\n        ></div>\n      </Space>\n      {/* The camera control panel */}\n      <div\n        style={{\n          position: 'absolute',\n          left: '50%',\n          bottom: 20,\n        }}\n      >\n        <div\n          style={{\n            position: 'relative',\n            left: '-50%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            backgroundColor: '#6666',\n            padding: 20,\n            borderRadius: 14,\n          }}\n        >\n          <div style={{ color: 'white', marginBottom: 5 }}>Camera Control</div>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <button style={buttonStyle} onClick={() => r.current?.viewPort?.camera.moveBy(0, 0, 0.1)}>\n              +\n            </button>\n            <button style={buttonStyle} onClick={() => r.current?.viewPort?.camera.moveBy(0, 0, -0.1)}>\n              −\n            </button>\n          </div>\n          <div>\n            <button\n              style={buttonStyle}\n              onClick={() =>\n                r.current?.viewPort?.camera.moveBy(0, -20, 0, undefined, undefined, {\n                  durationMilliseconds: 500,\n                })\n              }\n            >\n              ⇧\n            </button>\n          </div>\n          <div>\n            <button style={buttonStyle} onClick={() => r.current?.viewPort?.camera.moveBy(0, -5)}>\n              ↑\n            </button>\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <button\n              style={buttonStyle}\n              onClick={() =>\n                r.current?.viewPort?.camera.moveBy(-20, 0, 0, undefined, undefined, {\n                  durationMilliseconds: 500,\n                })\n              }\n            >\n              ⇦\n            </button>\n            <button style={buttonStyle} onClick={() => r.current?.viewPort?.camera.moveBy(-5, 0)}>\n              ←\n            </button>\n            <div style={buttonStyle} />\n            <button style={buttonStyle} onClick={() => r.current?.viewPort?.camera.moveBy(5, 0)}>\n              →\n            </button>\n            <button\n              style={buttonStyle}\n              onClick={() =>\n                r.current?.viewPort?.camera.moveBy(20, 0, 0, undefined, undefined, {\n                  durationMilliseconds: 500,\n                })\n              }\n            >\n              ⇨\n            </button>\n          </div>\n          <div>\n            <button style={buttonStyle} onClick={() => r.current?.viewPort?.camera.moveBy(0, 5)}>\n              ↓\n            </button>\n          </div>\n          <div>\n            <button\n              style={buttonStyle}\n              onClick={() =>\n                r.current?.viewPort?.camera.moveBy(0, 20, 0, undefined, undefined, {\n                  durationMilliseconds: 500,\n                })\n              }\n            >\n              ⇩\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst buttonStyle = {\n  width: 30,\n  height: 30,\n  fontSize: 16,\n};\n","import * as lodash from 'lodash';\nimport * as React from 'react';\nimport { Space } from 'react-zoomable-ui';\n\nconst colorFor = (i: number) => {\n  switch (i % 4) {\n    case 0:\n      return '#440023';\n    case 1:\n      return '#F0A932';\n    case 2:\n      return '#39AA99';\n    case 3:\n      return '#839FFF';\n  }\n};\n\nexport const LargeAreaDemo = () => {\n  return (\n    <Space style={{ backgroundColor: 'black' }} innerDivStyle={{ width: 10000 }}>\n      {lodash.range(0, 30).map(r => (\n        <div key={`row-${r}`} style={{ display: 'flex', flexDirection: 'row' }}>\n          {lodash.range(0, 40).map(c => (\n            <div\n              key={`column-${c}`}\n              style={{\n                height: 200,\n                width: 200,\n                backgroundColor: colorFor(c + r),\n                margin: 10,\n                color: 'white',\n              }}\n            >\n              {r},{c}\n            </div>\n          ))}\n        </div>\n      ))}\n    </Space>\n  );\n};\n","import * as React from 'react';\nimport { Space}  from 'react-zoomable-ui';\n\nconst text = `\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis fermentum ex. Vestibulum interdum nulla quis venenatis mattis. Praesent elementum a sem vel molestie. Pellentesque eu neque eget eros sagittis sodales vel non ligula. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec lacus nec nulla congue posuere. Fusce turpis lorem, laoreet nec elit ut, lacinia efficitur velit.\n\nDonec quis semper tellus, ac vulputate leo. Vivamus aliquet ipsum sed sollicitudin fermentum. Sed vehicula, quam vel viverra gravida, risus urna cursus mi, sed porttitor arcu dolor interdum elit. Nulla ipsum metus, sollicitudin a mi non, bibendum tristique mi. Integer posuere ipsum quis felis vulputate, eget placerat eros lacinia. Sed quis sollicitudin tortor, at hendrerit risus. Nullam et est placerat, molestie urna aliquet, dictum lorem. Donec tellus purus, accumsan vel eros vulputate, finibus feugiat mi. Phasellus erat massa, porta non finibus ut, pellentesque id sapien. Cras interdum volutpat lacus id iaculis. Sed iaculis velit eu nisi vestibulum dignissim. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nullam sit amet mauris dictum, tristique lectus eget, scelerisque augue. Duis luctus ac libero vel iaculis.\n\nQuisque vitae nulla tempus, mollis elit nec, dapibus quam. Curabitur eget augue a metus aliquet suscipit in ac sapien. Vestibulum ac lectus ut arcu fringilla iaculis id nec mauris. Fusce quis lacus id sapien rhoncus molestie. Duis lacinia et magna eu molestie. In est dui, posuere et accumsan ut, faucibus sed velit. Donec id tellus sed lorem ornare efficitur. Integer sit amet odio tortor. Vestibulum tristique ex nec facilisis tristique.\n`;\n\nexport const LongPageDemo = () => {\n  return (\n    <Space style={{ backgroundColor: 'azure' }} innerDivStyle={{ padding: 20, backgroundColor: '#fafee9' }}>\n      <h6>1.</h6>\n      <div>{text}</div>\n      <h6>2.</h6>\n      <div>{text}</div>\n      <h6>3.</h6>\n      <div>{text}</div>\n      <h6>4.</h6>\n      <div>{text}</div>\n      <h6>5.</h6>\n      <div>{text}</div>\n      <h6>6.</h6>\n      <div>{text}</div>\n      <h6>7.</h6>\n      <div>{text}</div>\n      <h6>8.</h6>\n      <div>{text}</div>\n      <h6>9.</h6>\n      <div>{text}</div>\n      <h6>10.</h6>\n      <div>{text}</div>\n    </Space>\n  );\n};\n","import * as React from 'react';\nimport { PressEventCoordinates, PressHandlingOptions, Space, ViewPort } from 'react-zoomable-ui';\n\nconst initViewPort = (vp: ViewPort) => {\n  vp.camera.recenter(100, 100, 2);\n};\n\nconst formatCoordsAsString = (p?: PressEventCoordinates) => {\n  return p === undefined\n    ? '-'\n    : `virtual: ${p.x.toFixed(1)}, ${p.y.toFixed(1)}, client: ${p.clientX.toFixed(1)}, ${p.clientY.toFixed(1)}`;\n};\n\nexport const LowLevelEventsDemo = () => {\n  const r = React.useRef<Space | null>(null);\n  const [lastPress, setLastPress] = React.useState();\n  const [lastHover, setLastHover] = React.useState();\n  const [pressContextMenu, setPressContextMenu] = React.useState();\n  const [capturePress, setCapturePress] = React.useState();\n  return (\n    <Space\n      ref={r}\n      style={{ backgroundColor: 'black' }}\n      onCreate={initViewPort}\n      onDecideHowToHandlePress={(element, coords): PressHandlingOptions | undefined => {\n        setLastPress(coords);\n\n        // Get id of element or nearest ancestor with an id\n        let id;\n        let y = element.target as any;\n        while (!id && element) {\n          id = y.id;\n          if (!id) {\n            y = y.parentElement;\n          }\n        }\n\n        if (id === 'prevent_drag') {\n          return { ignorePressEntirely: true };\n        } else if (id === 'capture_press') {\n          return {\n            capturePressThresholdMs: 0,\n            onCapturePressMove: c => setCapturePress(c),\n          };\n        }\n        return undefined;\n      }}\n      onHover={(e, c) => setLastHover(c)}\n      onPressContextMenu={(e, c) => setPressContextMenu(c)}\n    >\n      <div\n        style={{\n          width: 200,\n          height: 200,\n          left: 0,\n          top: 0,\n          backgroundColor: '#FFF',\n          fontSize: 10,\n        }}\n      >\n        <div>\n          Press:\n          <br />\n          <small>{formatCoordsAsString(lastPress)}</small>\n        </div>\n        <br />\n        <div>\n          Hover:\n          <br /> <small>{formatCoordsAsString(lastHover)}</small>\n        </div>\n\n        <br />\n        <div>\n          Press Context Menu:\n          <br /> <small>{formatCoordsAsString(pressContextMenu)}</small>\n        </div>\n        <br />\n        <div>\n          Capture Press:\n          <br /> <small>{formatCoordsAsString(capturePress)}</small>\n        </div>\n        <br />\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <div\n            id=\"capture_press\"\n            style={{\n              width: 100,\n              backgroundColor: 'red',\n              padding: 4,\n              paddingBottom: 6,\n              borderRadius: 2,\n              margin: 10,\n            }}\n          >\n            <small>CAPTURE PRESS TEST</small>\n          </div>\n          <br />\n          <div\n            id=\"prevent_drag\"\n            style={{\n              width: 100,\n              backgroundColor: 'orange',\n              padding: 4,\n              paddingBottom: 6,\n              borderRadius: 2,\n              margin: 10,\n            }}\n          >\n            <small>PREVENT DRAG TEST</small>\n          </div>\n        </div>\n      </div>\n    </Space>\n  );\n};\n","import * as lodash from 'lodash';\nimport * as React from 'react';\nimport { Pressable, Space, NoPanArea, SpaceContext } from 'react-zoomable-ui';\n\nimport mountain from './mountain.jpg';\n\nconst SimpleTapCountingButton = React.memo(() => {\n  const [tapCount, setTapCount] = React.useState(0);\n  const [message, setMessage] = React.useState('TAP ME');\n  return (\n    <Pressable\n      style={{\n        fontSize: 'small',\n        color: 'white',\n        backgroundColor: 'darkorchid',\n        borderRadius: 10,\n        padding: 20,\n      }}\n      potentialTapStyle={{ backgroundColor: 'blue' }}\n      potentialLongTapStyle={{ backgroundColor: 'darkblue' }}\n      hoverStyle={{ backgroundColor: 'orchid' }}\n      onTap={() => {\n        setTapCount(tapCount + 1);\n        setMessage('TAP COUNT: ' + (tapCount + 1));\n      }}\n      onLongTap={() => {\n        setMessage('LONG TAPPED!');\n      }}\n    >\n      {message}\n    </Pressable>\n  );\n});\n\nconst DragContainer = ({ children }: React.PropsWithChildren<{}>) => {\n  return (\n    <div\n      style={{\n        height: 200,\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#eee',\n        border: 'dotted 2px #999',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\ninterface DraggableButtonProps {\n  readonly capturePressOn: 'press' | 'long-press';\n}\n\nconst DraggableButton = (props: DraggableButtonProps) => {\n  const [{ x, y }, setTranslation] = React.useState({ x: 0, y: 0 });\n  const [{ panOffsetX, panOffsetY }, setPanOffset] = React.useState({\n    panOffsetX: 0,\n    panOffsetY: 0,\n  });\n  const context = React.useContext(SpaceContext);\n\n  const baseStyle: React.CSSProperties = {\n    fontSize: 'small',\n    color: 'white',\n    background: \n    props.capturePressOn === 'press' ?\n    'repeating-linear-gradient(darkgreen, darkgreen 2px, green 3px, green 4px)' \n    : 'repeating-linear-gradient(darkgoldenrod, darkgoldenrod 2px, goldenrod 3px, goldenrod 4px)',\n    borderRadius: 10,\n    padding: 20,\n    textAlign: 'center',\n    width: 120,\n  };\n  \n  return (\n    <Pressable\n      style={Object.assign( {}, baseStyle, { transform: `translate(${x}px, ${y}px)` },)}\n      capturePressThresholdMs={props.capturePressOn === 'press' ? 0 : 500}\n      potentialTapStyle={props.capturePressOn === 'long-press' ? { background: 'orange' } : undefined}\n      capturePressStyle={props.capturePressOn === 'press' ? { background: 'green' } : { background: 'darkorange' }}\n      onCapturePressStart={(coords, pressableUnderlyingElement) => {\n        const vp = context.viewPort;\n        const pressableVirtualSpaceRect = vp.translateClientRectToVirtualSpace(pressableUnderlyingElement);\n        // The offset is useful because it records which part of the Pressable\n        // the pan started on. If we don't have this, when we calculate the new\n        // x and y coordinates for the Pressable when the pan moves we would by\n        // default treat it like the top left of the Pressable was always the\n        // part being dragged.\n        setPanOffset({\n          panOffsetX: coords.x - pressableVirtualSpaceRect.left,\n          panOffsetY: coords.y - pressableVirtualSpaceRect.top,\n        });\n      }}\n      onCapturePressMove={(coords, pressableUnderlyingElement) => {\n        // Note that almost all the complexity here is due to trying to bound\n        // the pressable inside its parent. If we didn't care about that we\n        // could just use the deltas in `coords` and add those to the current x\n        // and y values.  We also wouldn't need `onCapturePanStart`.\n        const vp = context.viewPort;\n        const dragContainerBounds = vp.translateClientRectToVirtualSpace(pressableUnderlyingElement.parentElement!);\n        const { width: childWidth, height: childHeight } = vp.translateClientRectToVirtualSpace(\n          pressableUnderlyingElement,\n        );\n\n        const logicalX = lodash.clamp(\n          coords.x - panOffsetX,\n          dragContainerBounds.left,\n          dragContainerBounds.right - childWidth,\n        );\n        const logicalY = lodash.clamp(\n          coords.y - panOffsetY,\n          dragContainerBounds.top,\n          dragContainerBounds.bottom - childHeight,\n        );\n\n        // Finally since we start with the button centered inside the drag\n        // container, and thus x = 0 and y = 0 means the CENTER of the drag\n        // container, rather than the top left, we have to subtract the center\n        // of the drag container from our new x and y so that the final\n        // translated position (which will be offset from the CENTER) is right.\n        const finalX = logicalX - dragContainerBounds.left - dragContainerBounds.width / 2 + childWidth / 2;\n        const finalY = logicalY - dragContainerBounds.top - dragContainerBounds.height / 2 + childHeight / 2;\n\n        setTranslation({ x: finalX, y: finalY });\n      }}\n    >\n      {props.capturePressOn === 'press'\n        ? 'DRAG ME'\n        : ({ interaction }) =>\n            interaction === undefined\n              ? 'CLICK/TOUCH ME'\n              : interaction === 'potential-tap'\n              ? 'WAIT A BIT'\n              : interaction === 'press-captured'\n              ? 'DRAG'\n              : '?'}\n    </Pressable>\n  );\n};\n\nexport const OverviewDemo = () => {\n  return (\n    <Space onCreate={vp => vp.camera.centerFitHorizontalAreaIntoView(0, 1000)} innerDivStyle={innerDivStyle}>\n      <div style={innerContainerStyle}>\n        <h3>(1) Click or touch anywhere and drag to pan</h3>\n        <h3>(2) Use two fingers to zoom in and out, or the mouse wheel</h3>\n        <h3>(3) Regular HTML elements behave mostly as expected</h3>\n        <div style={rowStyle}>\n          <div style={columnStyle}>\n            <img src={mountain} width={100} height={100} alt=\"logo\" />\n            <a href=\"https://reactjs.org/\">https://reactjs.org/</a>\n            <br />\n            <button onClick={() => alert('CLICKED')}>CLICK ME FOR AN ALERT</button>\n            <pre>SOME CODE in a PRE TAG</pre>\n          </div>\n\n          <div style={columnStyle}>\n            <select>\n              <option>A</option>\n              <option>B</option>\n              <option>C</option>\n              <option>D</option>\n            </select>\n            <br />\n            <input type=\"date\" />\n            <br />\n            <input type=\"text\" />\n            <br />\n            <textarea></textarea>\n          </div>\n        </div>\n        <h3>(4) Specialized Components for more complex interactions</h3>\n        <div style={rowStyle}>\n          <div style={columnStyle}>\n            <div>\n              <b>Pressable</b>\n              <br />\n              Creates a clickable and tap-able space that doesn't conflict\n              with panning. It also can handle long clicks or\n              taps.\n              <br />\n              <br />\n              Try clicking or tapping on the button below and releasing. Then\n              try doing it again, but dragging before releasing to start a\n              pan.\n            </div>\n            <br />\n            <SimpleTapCountingButton />\n          </div>\n\n          <div style={columnStyle}>\n            <div>\n              <b>Pressable (continued)</b>\n              <br />\n              Has functionality that can be used to build custom\n              interactions, like dragging.\n            </div>\n            <br />\n            <DragContainer>\n              <DraggableButton capturePressOn=\"press\" />\n            </DragContainer>\n            <br />\n            <DragContainer>\n              <DraggableButton capturePressOn=\"long-press\" />\n            </DragContainer>\n          </div>\n\n          <div style={columnStyle}>\n            <div>\n              <b>NoPanArea</b>\n              <br />\n              Creates an area where pan interactions are ignored (not zoom though).\n            </div>\n            <br />\n            <NoPanArea style={noPanAreaStyle}>\n              <span>Can't pan from within this area</span>\n            </NoPanArea>\n          </div>\n        </div>\n      </div>\n    </Space>\n  );\n};\n\nconst innerDivStyle: React.CSSProperties = {\n  display: 'flex',\n  justifyContent: 'space-around',\n  alignItems: 'center',\n  flexDirection: 'row',\n  marginTop: 40,\n  width: 1000,\n};\n\nconst innerContainerStyle: React.CSSProperties = {\n  backgroundColor: 'white',\n  maxWidth: 830,\n  minWidth: '60%',\n  minHeight: 200,\n  border: 'solid 1px #bbb',\n  padding: 5,\n  marginBottom: 40,\n};\n\nconst rowStyle: React.CSSProperties = { flex: 1, display: 'flex ' };\n\nconst columnStyle: React.CSSProperties = {\n  flex: 1,\n  margin: 10,\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n  fontSize: 'small',\n};\n\nconst noPanAreaStyle: React.CSSProperties = {\n  backgroundColor: 'darkred',\n  color: 'white',\n  height: 100,\n  width: 100,\n};\n","import * as React from 'react';\nimport { Space } from 'react-zoomable-ui';\n\nimport mountain from './mountain.jpg';\n\nexport const ZoomableImagesDemo = () => {\n  const renderImageArea = () => (\n    <div style={{ width: 300, height: 300, position: 'relative' }}>\n      <Space\n        style={{ border: 'solid 1px black', margin: 20 }}\n        onCreate={vp => {\n          vp.setBounds({ x: [0, 1280], y: [0, 960] });\n          vp.camera.centerFitAreaIntoView({\n            left: 0,\n            top: 0,\n            width: 1280,\n            height: 960,\n          });\n        }}\n      >\n        <img src={mountain} width={1280} height={960} alt=\"A Mountain\" />\n      </Space>\n    </div>\n  );\n  return (\n    <div>\n      <div style={{ display: 'flex', paddingTop: 80, justifyContent: 'center' }}>\n        {renderImageArea()}\n        {renderImageArea()}\n        {renderImageArea()}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, NavLink, Route, Switch } from 'react-router-dom';\nimport { suppressBrowserZooming }  from 'react-zoomable-ui';\n\nimport './index.css';\n\nimport { BoundsDemo } from './BoundsDemo';\nimport { CameraControlDemo } from './CameraControlDemo';\nimport { LargeAreaDemo } from './LargeAreaDemo';\nimport { LongPageDemo } from './LongPageDemo';\nimport { LowLevelEventsDemo } from './LowLevelEventsDemo';\nimport { OverviewDemo } from './OverviewDemo';\nimport { ZoomableImagesDemo } from './ZoomableImagesDemo';\n\nfunction App() {\n  React.useEffect(suppressBrowserZooming);\n  return (\n    <div style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      <HashRouter>\n        <nav\n          style={{\n            backgroundColor: '#0bf9',\n            padding: '5px 10px',\n          }}\n        >\n          <NavLink to=\"/overview\" activeClassName=\"active\">\n            Overview\n          </NavLink>{' '}\n          <NavLink to=\"/zoomableImages\" activeClassName=\"active\">\n            Zoomable Images\n          </NavLink>{' '}\n          <NavLink to=\"/largeArea\" activeClassName=\"active\">\n            Large Area\n          </NavLink>{' '}\n          <NavLink to=\"/longPage\" activeClassName=\"active\">\n            Long Page\n          </NavLink>{' '}\n          <NavLink to=\"/cameraControl\" activeClassName=\"active\">\n            Camera Control\n          </NavLink>{' '}\n          <NavLink to=\"/bounds\" activeClassName=\"active\">\n            Bounds\n          </NavLink>{' '}\n          <NavLink to=\"/lowLevelEvents\" activeClassName=\"active\">\n            Low Level Events\n          </NavLink>{' '}\n        </nav>\n        {/* Note the position: 'relative' here */}\n        <div style={{ flexGrow: 1, position: 'relative' }}>\n          <Switch>\n            <Route path=\"/zoomableImages\">\n              <ZoomableImagesDemo />\n            </Route>\n            <Route path=\"/largeArea\">\n              <LargeAreaDemo />\n            </Route>\n            <Route path=\"/longPage\">\n              <LongPageDemo />\n            </Route>\n            <Route path=\"/cameraControl\">\n              <CameraControlDemo />\n            </Route>\n            <Route path=\"/bounds\">\n              <BoundsDemo />\n            </Route>\n            <Route path=\"/lowLevelEvents\">\n              <LowLevelEventsDemo />\n            </Route>\n            <Route>\n              <OverviewDemo />\n            </Route>\n          </Switch>\n        </div>\n        <div className=\"bottom\" style={{ backgroundColor: '#0bf9', height: 30 }}></div>\n      </HashRouter>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}